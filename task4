列表


#切片 start:stop:step
#start:  # sort()表示排序
x=[1,2,3,6,5]
print(x[:3])  #1--3
print(x[3:])  #4--5
print(x[1:5:2])
x.sort( )
print(x)

#列表拼接（首尾，复制）
list1=[1,2,3]
list2=[4,8,9]
print(list1 + list2)  #耗内存
print(list1 * 2)      # * 几 表示 复制 几 遍

练习
#练习1
list1=[2,5,6,7,8,9,2,9,9]
list1.append(15)
print(list1)
list1.insert(5,20)
print(list1)
list2=list1+[2,5,6]
print(list2)
list1.pop(3)
print(list1)
list1.reverse()
print(list1)
list1.sort(reverse=False)
print(list1)
list1.sort(reverse=True)
print(list1)

练习2（problem）
lst=[1,[4,6],True]
list=[ ]
for i in lst:
   
    if  isinstance(lst[i-1],int)= True:
        lst[i-1]=lst[i-1]*2
        
list=list+lst[i-1]
print (list)   

练习3
求顶峰的索引
class Solution:
    def peakIndexInMountainArray(self, A: List[int]) -> int:
       A.Sort(reverse=True)
       return(A.index(a[0]))
    
